<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>My first blog</title>
    <url>/2021/12/03/2021-12-03-My-first-blog/</url>
    <content><![CDATA[<h2 id="摘要："><a href="#摘要：" class="headerlink" title="摘要："></a>摘要：</h2><p>​    这是我的第一篇博客，创建博客想要培养自己的计算机兴趣，想记录一些学习经历和学习心得，以及一些职业规划。</p>
<h2 id="关于搭建博客："><a href="#关于搭建博客：" class="headerlink" title="关于搭建博客："></a>关于搭建博客：</h2><p>​    我利用了GitHub和hexo，作为一个刚开始培养计算机思维的大学生，想搭建一个博客真的还是挺难受的，用云服务器太贵了，用GitHub太麻烦了，但是，兴趣是最好的老师，也感谢b站，一步一步走搞了几个小时（走了一些弯路）终于完成了。之后还有美化博客的问题，我尽量学习！！</p>
<p>​    以下是我成功搭建的参考视频：</p>
<p>​    <a href="https://www.bilibili.com/video/BV1mU4y1j72n?from=search&seid=7410781831365389063&spm_id_from=333.337.0.0">GitHub与hexo个人博客搭建</a></p>
<span id="more"></span>

<h2 id="一些展望："><a href="#一些展望：" class="headerlink" title="一些展望："></a>一些展望：</h2><p>​    希望在大学能够多学习技术，多参加竞赛和实习，本科毕业后去大厂镀镀金，之后回四川“养老”，有机会的话程序员退休后考个公务员之类的。</p>
<p>​    希望之后大学生活遇到挫折，看到这个博客能够感到激励！！</p>
]]></content>
      <tags>
        <tag>First trying!</tag>
      </tags>
  </entry>
  <entry>
    <title>Dev-sidercar</title>
    <url>/2021/12/04/Dev-sidercar/</url>
    <content><![CDATA[<h1 id="加速访问GitHub的插件——dev-sidercar"><a href="#加速访问GitHub的插件——dev-sidercar" class="headerlink" title="加速访问GitHub的插件——dev-sidercar"></a>加速访问GitHub的插件——dev-sidercar</h1><ol>
<li>插件下载链接：<a href="https://gitee.com/docmirror/dev-sidecar/releases">dev-sidercar_download</a>(下最新版本即可)</li>
</ol>
<ol start="2">
<li>安装证书：具体操作在完成dev-sidercar的安装后会有一定指引</li>
</ol>
<span id="more"></span>

<ol start="3">
<li><p>模式调整： 在软件首页默认模式中可以开启四个加速按键，</p>
<p>前两个为GitHub，第三个为git，第四个为nodejs</p>
</li>
<li><p>完成后： 畅游你的GitHub吧！</p>
</li>
</ol>
<h6 id="插件作者：Greper-gitee"><a href="#插件作者：Greper-gitee" class="headerlink" title="插件作者：Greper_gitee"></a>插件作者：<a href="https://gitee.com/greper">Greper_gitee</a></h6>]]></content>
      <tags>
        <tag>plug-in</tag>
      </tags>
  </entry>
  <entry>
    <title>写自己的博客</title>
    <url>/2021/12/05/%E5%86%99%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<h1 id="写自己的博客文章"><a href="#写自己的博客文章" class="headerlink" title="写自己的博客文章"></a>写自己的博客文章</h1><h2 id="摘要："><a href="#摘要：" class="headerlink" title="摘要："></a>摘要：</h2><h3 id="1-创建一篇博客文章"><a href="#1-创建一篇博客文章" class="headerlink" title="1. 创建一篇博客文章"></a>1. 创建一篇博客文章</h3><h3 id="2-写一篇markdown文档"><a href="#2-写一篇markdown文档" class="headerlink" title="2. 写一篇markdown文档"></a>2. 写一篇markdown文档</h3><h3 id="3-存档"><a href="#3-存档" class="headerlink" title="3. 存档"></a>3. 存档</h3><h3 id="4-可能遇到的问题（要看哦！！）"><a href="#4-可能遇到的问题（要看哦！！）" class="headerlink" title="4. 可能遇到的问题（要看哦！！）"></a>4. 可能遇到的问题（要看哦！！）</h3><p><strong>如果遇到问题了，可以滑到文章最下面哦</strong></p>
<p><strong>如果没有解决，百度是个不错的选择呢 ^ v ^ !</strong></p>
<span id="more"></span>

<h2 id="1-创建一篇博客文章-1"><a href="#1-创建一篇博客文章-1" class="headerlink" title="1. 创建一篇博客文章"></a>1. 创建一篇博客文章</h2><p>​        利用hexo写博客的时候，首先要创建一篇博客，提供写文章的位置，没错你不能直接在你的hexo里面写（除非安装了一些第三方插件）</p>
<p>​        在你的blog文件夹中打开你的git命令行，输入hexo new post “引号里写你的文章标题”</p>
<p>这样在你的blog/source/_posts中就能看到一个写有你文章标题的md（即markdown）文件</p>
<p>git与GitHub都只支持md文件不支持txt文件等</p>
<img src="/2021/12/05/%E5%86%99%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2/md.png" class>



<h2 id="2-写一篇Markdown文章"><a href="#2-写一篇Markdown文章" class="headerlink" title="2. 写一篇Markdown文章"></a>2. 写一篇Markdown文章</h2><ol>
<li><p>什么是markdown文件？</p>
<p>markdown是一种轻量级的标记语言，用于在纯文本中添加格式化元素</p>
<p><strong>就是，用markdown你可以利用一些简单的语法来使你的文章有序美观</strong></p>
</li>
<li><p>常用的markdown编译器</p>
<p>参考文章：<a href="https://blog.csdn.net/davidhzq/article/details/100815332">主流markdown编译器</a></p>
<p>我个人正在用的是Typora，干净简介，极简风格真的很nice，而且支持三大系统</p>
<p>但是听说最新版本的要收费了，还不便宜，所以推荐下载旧版的，别去更新</p>
<p>（另外，Typora槽点好像很多，谨慎选择）</p>
</li>
<li><p>markdown语法</p>
<p>markdown的基础语法很简单，10分钟不到就能基本使用</p>
<p>参考文章：<a href="https://blog.csdn.net/smilehappiness/article/details/105067651?ops_request_misc=&request_id=&biz_id=102&utm_term=markdown%E8%AF%AD%E6%B3%95&utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduweb~default-3-105067651.pc_search_all_es&spm=1018.2226.3001.4187">Markdown基础语法</a>（学这个够用）</p>
<p>​                   <a href="https://blog.csdn.net/witnessai1/article/details/52551362?ops_request_misc=%7B%22request_id%22:%22163869330116780269890699%22,%22scm%22:%2220140713.130102334..%22%7D&request_id=163869330116780269890699&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_positive~default-1-52551362.pc_search_all_es&utm_term=markdown%E8%AF%AD%E6%B3%95&spm=1018.2226.3001.4187">Markdown语法大全 </a>（有闲心可以了解）</p>
</li>
<li><p>做完这些后点开你的md文档，开始大放光彩吧！！写完记得保存哦！！</p>
</li>
</ol>
<h2 id="3-存档-1"><a href="#3-存档-1" class="headerlink" title="3. 存档"></a>3. 存档</h2><p>​        每次修改完你的blog文件夹后（不论是新加了文档还是改动了什么代码）都要在blog文件夹目录中打开git命令行进行存档</p>
<p>​        要用到命令：</p>
<ol>
<li><p>hexo g （是 hexo generate的缩写）</p>
<p>生成网站静态文件，手动部署网站</p>
<ol start="2">
<li>hexo d （是hexo deploy的缩写）</li>
</ol>
<p>自动生成网站静态文件，并部署到仓库</p>
<ol start="3">
<li>hexo cl （是hexo clean的缩写）</li>
</ol>
<p>清楚缓存文件db.json和医生称的静态文件public</p>
<p>网站显示异常的时候（网页白屏等）可以试试它</p>
<p><strong>每次按顺序使用如上命令即可完成存档</strong></p>
<p><strong>PS. hexo g和hexo d可以合并成hexo g -d，也很好用哦</strong></p>
</li>
</ol>
<h2 id="4-可能遇到的问题"><a href="#4-可能遇到的问题" class="headerlink" title="4. 可能遇到的问题"></a>4. 可能遇到的问题</h2><h3 id="1-图像显示问题"><a href="#1-图像显示问题" class="headerlink" title="1. 图像显示问题"></a>1. 图像显示问题</h3><p>初次使用hexo可能会遇到插入的图片部署后不能在网页显示的问题，</p>
<p>以下是可行的解决方案</p>
<p>（版本： Hexo 3以上）</p>
<ol>
<li><p>在blog文件夹目录下的配置文件_config.yml（记事本打开都ok，编译器打开最舒服）</p>
<p>中找到post_asset_folder: false，将false改为true</p>
<p>作用：在建立文件时，<code>Hexo</code>会自动建立一个与文章同名的文件夹，</p>
<p>这样就可以把与该文章相关的所有资源（图片）都放到那个文件夹里</p>
<p>方便之后引用</p>
</li>
<li><p>在blog文件夹目录打开git命令行输入：</p>
<p>npm install <a href="https://github.com/7ym0n/hexo-asset-image">https://github.com/7ym0n/hexo-asset-image</a> –save </p>
<p>安装插件</p>
</li>
<li><p>插入图片时把需要的图片放在与文章同名的文件夹中并改一个好记的名字</p>
<p>插入时在你的文章中输入</p>
<p>“一些说明” 用来描述图片，可以不要，</p>
<p>这样你就可以在网页看到你的图片了</p>
</li>
</ol>
<h3 id="n-未完待续…"><a href="#n-未完待续…" class="headerlink" title="n. 未完待续…."></a>n. 未完待续….</h3>]]></content>
      <tags>
        <tag>个人博客</tag>
      </tags>
  </entry>
  <entry>
    <title>搭建个人博客</title>
    <url>/2021/12/04/%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<h1 id="利用GitHub和hexo搭建个人博客："><a href="#利用GitHub和hexo搭建个人博客：" class="headerlink" title="利用GitHub和hexo搭建个人博客："></a>利用GitHub和hexo搭建个人博客：</h1><h2 id="所需工具："><a href="#所需工具：" class="headerlink" title="所需工具："></a>所需工具：</h2><ol>
<li> git软件 和 GitHub账号（具体是什么东西有兴趣的可以去百度了解，建议学计算机的都去了解了解）</li>
</ol>
<p>​        git下载：<a href="https://git-scm.com/download/win">Git_download</a>(windows系统)</p>
<p>​        GitHub官网：<a href="https://github.com/">GitHub</a>（连vpn会更好操作，一般大学都会有vpn）</p>
<ol start="2">
<li><p>Node.js（一款JavaScript的运行环境）</p>
<p>Node.js下载：<a href="https://nodejs.org/en/">Node.js </a>（安装可以看下文搭建的刘奇云大佬保姆级教学）</p>
</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">注意每个下载都要装进D（或D以后）的盘不占C盘内存才好！（最好新建文件夹方便管理）</span><br><span class="line">除了安装盘，直接默认就ok</span><br></pre></td></tr></table></figure>

<span id="more"></span>

<p><strong>如果遇到什么问题可以看看博客最下面，说不定有解决办法，</strong></p>
<p><strong>如果没有，百度是个不错的选择 ^ v ^</strong></p>
<h2 id="搭建："><a href="#搭建：" class="headerlink" title="搭建："></a>搭建：</h2><p>准备好git，GitHub和Node.js后</p>
<ol>
<li>配置你的Node.js:</li>
</ol>
<p><a href="https://www.cnblogs.com/liuqiyun/p/8133904.html">Node.js安装及环境配置之Windows篇 - 刘奇云 </a>(大佬做的很棒！！)</p>
<p>找不到高级系统设置可以直接在win自带的搜索上搜”高级系统设置“</p>
<figure class="highlight ps"><table><tr><td class="code"><pre><span class="line">命令行输入：</span><br><span class="line">node <span class="literal">-v</span>  检查node是否安装完成</span><br><span class="line">npm <span class="literal">-v</span> 检查npm是否安装完成</span><br><span class="line">git -<span class="literal">-version</span>（注意这里是两个减号） 检查git是否安装完成</span><br><span class="line">（出现版本号即表示安装完成）</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>下载hexo：</li>
</ol>
<figure class="highlight ps"><table><tr><td class="code"><pre><span class="line">命令行输入：</span><br><span class="line">npm install hexo<span class="literal">-cli</span> <span class="literal">-g</span> 下载hexo</span><br><span class="line">hexo <span class="literal">-v</span> 检查hexo是否安装完成</span><br><span class="line">（出现版本号即安装完成）</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>搭建GitHub仓库（repository）：</li>
</ol>
<blockquote>
<p>题外话：hexo是一种网页框架，上面的内容需要储存到一定的位置，GitHub提供了这样一个功能，通过搭建GitHub仓库来储存hexo上的内容</p>
</blockquote>
<figure class="highlight ps"><table><tr><td class="code"><pre><span class="line">仓库的要求：</span><br><span class="line">仓库名为你的 注册名+.git.io(例如我的叫lelecarson.github.io)</span><br><span class="line">勾选pubulic和add a readme file（不让你的仓库是空的）</span><br><span class="line">(<span class="number">1</span>). 进入你的GitHub界面,在靠左侧有创建repository的字样（绿的）</span><br><span class="line">(<span class="number">2</span>). 按要求搭建一个仓库</span><br></pre></td></tr></table></figure>

<p>​     <strong>搭建仓库</strong></p>
<img src="/2021/12/04/%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/repo.png" class>



<ol start="4">
<li>生成ssh keys（好奇是啥的可以百度去查）：</li>
</ol>
<figure class="highlight ps"><table><tr><td class="code"><pre><span class="line">(<span class="number">1</span>). 在c盘外的盘中创建一个文件夹：叫一个你能记住的名字，比如我的叫bbblog</span><br><span class="line">(<span class="number">2</span>). 在该文件夹空白处右击点开git bash here（win11的右击选更多选项）</span><br><span class="line">	 得到一个git命令框</span><br><span class="line">(<span class="number">3</span>). 输入ssh 检查是否安装ssh（安装node的过程就安装了的）</span><br><span class="line">(<span class="number">4</span>). 输入ssh<span class="literal">-keygen</span> <span class="literal">-t</span> rsa <span class="literal">-C</span> <span class="string">&quot;注册GitHub时留的邮件地址&quot;</span></span><br><span class="line">	 例如我的就是ssh<span class="literal">-keygen</span> <span class="literal">-t</span> rsa <span class="literal">-C</span> <span class="string">&quot;zhou0908jie@outlook.com&quot;</span></span><br><span class="line">	 敲<span class="number">4</span>次回车</span><br><span class="line">(<span class="number">5</span>). 打开c盘，找到users（或者用户）找到ssh文件夹，打开id_rsa.pub(用notepad就能打开)</span><br><span class="line">	 复制其中的内容</span><br><span class="line">(<span class="number">6</span>). 打开GitHub，点击右上角的小三角形，点击settings，在左边的一栏子东西中点击</span><br><span class="line">	 SSH and GPG keys</span><br><span class="line">(<span class="number">7</span>). 点击New SSH keys（绿的那个），输入title（随便输啥），将(<span class="number">5</span>)中的复制粘贴到<span class="string">&quot;key&quot;</span>中</span><br><span class="line">	 然后点确定，底下绿色那个</span><br><span class="line">(<span class="number">8</span>). 打开git命令行，右键点past粘贴(<span class="number">5</span>)中的复制，敲<span class="number">1</span>次回车，输入yes</span><br></pre></td></tr></table></figure>

<p><strong>PS. 在git命令框中复制不为ctrl+c（Linux系统），老老实实右键！</strong></p>
<p><strong>打命令的时候要用英文输入法，空格不能省，注意引号冒号等！！！</strong></p>
<p>​         <strong>第(6)，(7)步图示</strong></p>
<img src="/2021/12/04/%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/ssh-keys.png" class>

<ol start="5">
<li>本地生成博客内容</li>
</ol>
<figure class="highlight ps"><table><tr><td class="code"><pre><span class="line">(<span class="number">1</span>). 在<span class="number">4</span>(<span class="number">1</span>)中新建的文件夹空白处右键打开git命令行</span><br><span class="line">(<span class="number">2</span>). 输入：</span><br><span class="line">	 hexo init 初始化，成功后会在该文件夹中生成一堆文件</span><br><span class="line">	 hexo s 运行本地hexo，成功后会呈现一个网址</span><br><span class="line">(<span class="number">3</span>). 复制网址到浏览器即可打开属于你的一个博客</span><br><span class="line">(<span class="number">4</span>). ctrl+c 关闭服务器，网站就打不开了，再用hexo s打开即可</span><br><span class="line">	 打开时，你敲任何命令都无效</span><br></pre></td></tr></table></figure>

<p>​       <strong>hexo s</strong></p>


<ol start="6">
<li>发布你的博客到互联网（让别人能浏览你的博客）</li>
</ol>
<figure class="highlight ps"><table><tr><td class="code"><pre><span class="line">(<span class="number">1</span>). 在<span class="number">4</span>(<span class="number">1</span>)中创建的文件夹中找到文件.config.yml</span><br><span class="line">	（打开拓展名才看得到.yml）右键打开</span><br><span class="line">	滑到最底下，将对应内容改为如下并ctrl+s保存：</span><br><span class="line">	deploy:</span><br><span class="line">	  <span class="built_in">type</span>: git</span><br><span class="line">	  repo: 这里填你的GitHub仓库地址，</span><br><span class="line">  			在GitHub仓库界面中点code会弹出相应地址（如图）</span><br><span class="line">  	  branch: main</span><br><span class="line">  	<span class="built_in">PS</span>!:冒号后面有空格，不可以省的！</span><br><span class="line">(<span class="number">2</span>). 进入git命令行输入：</span><br><span class="line">	npm install hexo<span class="literal">-deployer</span><span class="literal">-git</span> -<span class="literal">-save</span> 生成文件用的</span><br><span class="line">	hexo g 生成界面用的</span><br><span class="line">	hexo d 这个命令很容易失败！！！</span><br><span class="line">	（GitHub是国外的网站，连接很不稳定！等你能顺利进入GitHub的时候再执行一次）</span><br><span class="line">(<span class="number">3</span>). 命令执行成功的话会弹出一个弹窗</span><br><span class="line">	 让你输入你的用户名，密码（这里的密码是你令牌中的密码！！！！）之类的，</span><br><span class="line">	 用户名是你注册GitHub的用户名，邮箱是你注册GitHub的邮箱，密码是令牌中的密码</span><br><span class="line">(<span class="number">4</span>). 令牌密码在哪里：（有图）</span><br><span class="line">   	进入GitHub的settings界面，下滑找到左侧Developer settings，</span><br><span class="line">   	进入后点击左侧Personal access tokens，</span><br><span class="line">   	名字随便取，有效期限看你，权限全勾上没问题，</span><br><span class="line">   	完成后得到一串密码，复制粘贴即可，</span><br><span class="line">   	记住要保存你的令牌密码到记事本或者截图，因为之后不会再生成</span><br><span class="line">(<span class="number">5</span>). 发现GitHub仓库中文件不只有readme后就成功了</span><br><span class="line">	（你和他人可以不用hexo s就访问你的博客）</span><br><span class="line">	 同时你的博客有了自己的网址：</span><br><span class="line">	 	(你的GitHub用户名).github.io</span><br></pre></td></tr></table></figure>

<p>​      <strong>6(1)中的repo</strong></p>
<img src="/2021/12/04/%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/link.png" class>

<p>​      <strong>personal access tokens</strong></p>


<p>​       <strong>弹窗</strong></p>
<img src="/2021/12/04/%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/input.png" class>

<p>​       <strong>令牌密码</strong></p>
<img src="/2021/12/04/%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/token.png" class>



<h2 id="可能遇到的问题"><a href="#可能遇到的问题" class="headerlink" title="可能遇到的问题:"></a>可能遇到的问题:</h2><h4 id="1-打开博客会出现空白页的情况："><a href="#1-打开博客会出现空白页的情况：" class="headerlink" title="1. 打开博客会出现空白页的情况："></a>1. 打开博客会出现空白页的情况：</h4><p>解决方法：</p>
<ol>
<li><p>hexo 在浏览器中会缓存，改动过多就会出现问题，在git命令行中输入hexo cl清除缓存即可</p>
</li>
<li><p>代码输入错误，在git命令行中输入hexo g -d看看输出中有没有error，根据error进行修改</p>
</li>
<li><p>……</p>
<p>n. 下下策，删除blog文件夹中的信息，重新hexo init建立博客，到搭建的第5步</p>
</li>
</ol>
<h4 id="2-hexo-d的链接超时问题："><a href="#2-hexo-d的链接超时问题：" class="headerlink" title="2. hexo d的链接超时问题："></a>2. hexo d的链接超时问题：</h4><p>解决方法：</p>
<p>​    1. 安装dev-sidercar实测有效！！！（安装链接和使用方法在我的另一篇博客中）</p>
<h1 id="未完待续…"><a href="#未完待续…" class="headerlink" title="未完待续…"></a>未完待续…</h1>]]></content>
      <tags>
        <tag>个人博客</tag>
      </tags>
  </entry>
</search>
